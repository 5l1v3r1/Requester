
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'documentAT BANG BRACE_L BRACE_R BRACKET_L BRACKET_R COLON DOLLAR EQUALS FALSE FLOAT_VALUE FRAGMENT INT_VALUE MUTATION NAME NULL ON PAREN_L PAREN_R QUERY SPREAD STRING_VALUE TRUE\n        document : definition_list\n        \n        document : selection_set\n        \n        document : selection_set fragment_list\n        \n        fragment_list : fragment_list fragment_definition\n        \n        fragment_list : fragment_definition\n        \n        definition_list : definition_list definition\n        \n        definition_list : definition\n        \n        definition : operation_definition\n                   | fragment_definition\n        \n        operation_definition : operation_type name variable_definitions directives selection_set\n        \n        operation_definition : operation_type name variable_definitions selection_set\n        \n        operation_definition : operation_type name directives selection_set\n        \n        operation_definition : operation_type name selection_set\n        \n        operation_definition : operation_type variable_definitions directives selection_set\n        \n        operation_definition : operation_type variable_definitions selection_set\n        \n        operation_definition : operation_type directives selection_set\n        \n        operation_definition : operation_type selection_set\n        \n        operation_type : QUERY\n                       | MUTATION\n        \n        selection_set : BRACE_L selection_list BRACE_R\n        \n        selection_list : selection_list selection\n        \n        selection_list : selection\n        \n        selection : field\n                  | fragment_spread\n                  | inline_fragment\n        \n        field : alias name arguments directives selection_set\n        \n        field : name arguments directives selection_set\n        \n        field : alias name directives selection_set\n        \n        field : alias name arguments selection_set\n        \n        field : alias name arguments directives\n        \n        field : name directives selection_set\n        \n        field : name arguments selection_set\n        \n        field : name arguments directives\n        \n        field : alias name selection_set\n        \n        field : alias name directives\n        \n        field : alias name arguments\n        \n        field : alias name\n        \n        field : name arguments\n        \n        field : name directives\n        \n        field : name selection_set\n        \n        field : name\n        \n        fragment_spread : SPREAD fragment_name directives\n        \n        fragment_spread : SPREAD fragment_name\n        \n        fragment_definition : FRAGMENT fragment_name ON type_condition directives selection_set\n        \n        fragment_definition : FRAGMENT fragment_name ON type_condition selection_set\n        \n        inline_fragment : SPREAD ON type_condition directives selection_set\n        \n        inline_fragment : SPREAD ON type_condition selection_set\n        \n        fragment_name : NAME\n                      | FRAGMENT\n                      | QUERY\n                      | MUTATION\n                      | TRUE\n                      | FALSE\n                      | NULL\n        \n        type_condition : named_type\n        \n        directives : directive_list\n        \n        directive_list : directive_list directive\n        \n        directive_list : directive\n        \n        directive : AT name arguments\n                  | AT name\n        \n        arguments : PAREN_L argument_list PAREN_R\n        \n        argument_list : argument_list argument\n        \n        argument_list : argument\n        \n        argument : name COLON value\n        \n        variable_definitions : PAREN_L variable_definition_list PAREN_R\n        \n        variable_definition_list : variable_definition_list variable_definition\n        \n        variable_definition_list : variable_definition\n        \n        variable_definition : DOLLAR name COLON type default_value\n        \n        variable_definition : DOLLAR name COLON type\n        \n        variable : DOLLAR name\n        \n        default_value : EQUALS const_value\n        \n        name : NAME\n             | FRAGMENT\n             | QUERY\n             | MUTATION\n             | ON\n             | TRUE\n             | FALSE\n             | NULL\n        \n        alias : name COLON\n        \n        value : variable\n              | INT_VALUE\n              | FLOAT_VALUE\n              | STRING_VALUE\n              | null_value\n              | boolean_value\n              | enum_value\n              | list_value\n              | object_value\n        \n        const_value : INT_VALUE\n                    | FLOAT_VALUE\n                    | STRING_VALUE\n                    | null_value\n                    | boolean_value\n                    | enum_value\n                    | const_list_value\n                    | const_object_value\n        \n        boolean_value : TRUE\n                      | FALSE\n        \n        null_value : NULL\n        \n        enum_value : NAME\n                   | FRAGMENT\n                   | QUERY\n                   | MUTATION\n                   | ON\n        \n        list_value : BRACKET_L value_list BRACKET_R\n                   | BRACKET_L BRACKET_R\n        \n        value_list : value_list value\n        \n        value_list : value\n        \n        const_list_value : BRACKET_L const_value_list BRACKET_R\n                         | BRACKET_L BRACKET_R\n        \n        const_value_list : const_value_list const_value\n        \n        const_value_list : const_value\n        \n        object_value : BRACE_L object_field_list BRACE_R\n                     | BRACE_L BRACE_R\n        \n        object_field_list : object_field_list object_field\n        \n        object_field_list : object_field\n        \n        object_field : name COLON value\n        \n        const_object_value : BRACE_L const_object_field_list BRACE_R\n                           | BRACE_L BRACE_R\n        \n        const_object_field_list : const_object_field_list const_object_field\n        \n        const_object_field_list : const_object_field\n        \n        const_object_field : name COLON const_value\n        \n        type : named_type\n             | list_type\n             | non_null_type\n        \n        named_type : name\n        \n        list_type : BRACKET_L type BRACKET_R\n        \n        non_null_type : named_type BANG\n                      | list_type BANG\n        '
    
_lr_action_items = {'BRACE_R':([15,16,17,18,21,26,27,28,29,30,31,33,34,36,37,38,39,41,42,43,44,45,46,48,58,59,60,63,64,65,67,68,70,78,79,80,84,85,86,87,94,95,96,98,100,101,110,111,112,114,115,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,139,142,143,145,146,148,150,152,153,154,155,156,157,158,159,162,163,164,167,168,170,171,172,175,176,177,],[-77,-58,-78,-75,-79,-76,-72,-73,-74,-56,-23,-41,-22,-24,-25,67,-54,-48,-53,-50,-49,-52,-51,-60,-57,-37,-40,-39,-38,-43,-20,-21,-59,-34,-35,-36,-31,-33,-32,-42,-28,-30,-29,-61,-27,-47,-26,-87,-98,-85,142,-99,-81,-104,-100,-88,-82,-101,-105,-83,-102,-103,-86,-89,-84,-46,-107,-115,-117,162,-70,-95,-96,-93,167,-90,-97,-91,-94,-92,-106,-114,-116,-111,-120,-122,175,-118,-110,-119,-121,-123,]),'TRUE':([6,7,8,9,10,15,16,17,18,19,21,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,48,52,58,59,60,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,84,85,86,87,92,94,95,96,97,98,99,100,101,107,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,137,139,140,141,142,143,145,146,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,172,173,174,175,176,177,],[15,-19,15,45,-18,-77,-58,-78,-75,15,-79,-76,-72,-73,-74,-56,-23,15,-41,-22,45,-24,-25,15,-54,-48,-53,-50,-49,-52,-51,-60,15,-57,-37,-40,-80,15,-39,-38,-43,15,-20,-21,15,-59,-34,-35,-36,-63,15,-31,-33,-32,-42,15,-28,-30,-29,-62,-61,112,-27,-47,15,-26,-87,-98,112,-85,15,15,-99,-81,-104,-100,-88,-82,-101,-105,-64,-83,-102,-103,-86,-89,-84,-46,112,-107,112,-109,-115,-117,15,-70,-95,112,-96,-93,15,-90,-97,-91,-94,-92,-106,-108,112,-114,-116,-111,-113,112,-120,-122,15,-118,-110,-112,112,-119,-121,-123,]),'BRACKET_L':([15,17,18,21,26,27,28,29,92,99,107,111,112,113,114,117,118,119,120,121,122,123,124,126,127,128,129,130,131,137,139,140,141,142,146,148,149,150,152,154,155,156,157,158,159,160,161,162,164,165,166,167,172,173,174,175,],[-77,-78,-75,-79,-76,-72,-73,-74,107,113,107,-87,-98,113,-85,-99,-81,-104,-100,-88,-82,-101,-105,-83,-102,-103,-86,-89,-84,149,-107,113,-109,-115,-70,-95,149,-96,-93,-90,-97,-91,-94,-92,-106,-108,113,-114,-111,-113,149,-120,-110,-112,149,-119,]),'BRACKET_R':([15,17,18,21,26,27,28,29,89,105,106,109,111,112,113,114,117,118,119,120,121,122,123,124,126,127,128,129,130,131,134,135,138,139,140,141,142,146,147,148,149,150,152,154,155,156,157,158,159,160,162,164,165,166,167,172,173,175,],[-77,-78,-75,-79,-76,-72,-73,-74,-127,-126,-125,-124,-87,-98,139,-85,-99,-81,-104,-100,-88,-82,-101,-105,-83,-102,-103,-86,-89,-84,-130,147,-129,-107,159,-109,-115,-70,-128,-95,164,-96,-93,-90,-97,-91,-94,-92,-106,-108,-114,-111,-113,172,-120,-110,-112,-119,]),'STRING_VALUE':([15,17,18,21,26,27,28,29,99,111,112,113,114,117,118,119,120,121,122,123,124,126,127,128,129,130,131,137,139,140,141,142,146,148,149,150,152,154,155,156,157,158,159,160,161,162,164,165,166,167,172,173,174,175,],[-77,-78,-75,-79,-76,-72,-73,-74,131,-87,-98,131,-85,-99,-81,-104,-100,-88,-82,-101,-105,-83,-102,-103,-86,-89,-84,158,-107,131,-109,-115,-70,-95,158,-96,-93,-90,-97,-91,-94,-92,-106,-108,131,-114,-111,-113,158,-120,-110,-112,158,-119,]),'BRACE_L':([0,6,7,10,15,16,17,18,21,22,24,25,26,27,28,29,30,33,48,50,56,57,58,59,63,64,70,73,76,79,80,85,88,89,90,91,95,98,99,102,104,111,112,113,114,117,118,119,120,121,122,123,124,126,127,128,129,130,131,137,139,140,141,142,146,148,149,150,152,154,155,156,157,158,159,160,161,162,164,165,166,167,172,173,174,175,],[8,8,-19,-18,-77,-58,-78,-75,-79,8,8,8,-76,-72,-73,-74,-56,8,-60,8,8,8,-57,8,8,8,-59,-65,8,8,8,8,8,-127,-55,8,8,-61,115,8,8,-87,-98,115,-85,-99,-81,-104,-100,-88,-82,-101,-105,-83,-102,-103,-86,-89,-84,153,-107,115,-109,-115,-70,-95,153,-96,-93,-90,-97,-91,-94,-92,-106,-108,115,-114,-111,-113,153,-120,-110,-112,153,-119,]),'BANG':([15,17,18,21,26,27,28,29,89,106,109,147,],[-77,-78,-75,-79,-76,-72,-73,-74,-127,134,138,-128,]),'SPREAD':([8,15,16,17,18,21,26,27,28,29,30,31,33,34,36,37,38,39,41,42,43,44,45,46,48,58,59,60,63,64,65,67,68,70,78,79,80,84,85,86,87,94,95,96,98,100,101,110,132,],[35,-77,-58,-78,-75,-79,-76,-72,-73,-74,-56,-23,-41,-22,-24,-25,35,-54,-48,-53,-50,-49,-52,-51,-60,-57,-37,-40,-39,-38,-43,-20,-21,-59,-34,-35,-36,-31,-33,-32,-42,-28,-30,-29,-61,-27,-47,-26,-46,]),'DOLLAR':([15,17,18,21,23,26,27,28,29,51,53,72,89,99,105,106,108,109,111,112,113,114,117,118,119,120,121,122,123,124,126,127,128,129,130,131,134,136,138,139,140,141,142,146,147,148,150,151,152,154,155,156,157,158,159,160,161,162,164,167,172,175,],[-77,-78,-75,-79,52,-76,-72,-73,-74,52,-67,-66,-127,116,-126,-125,-69,-124,-87,-98,116,-85,-99,-81,-104,-100,-88,-82,-101,-105,-83,-102,-103,-86,-89,-84,-130,-68,-129,-107,116,-109,-115,-70,-128,-95,-96,-71,-93,-90,-97,-91,-94,-92,-106,-108,116,-114,-111,-120,-110,-119,]),'FALSE':([6,7,8,9,10,15,16,17,18,19,21,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,48,52,58,59,60,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,84,85,86,87,92,94,95,96,97,98,99,100,101,107,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,137,139,140,141,142,143,145,146,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,172,173,174,175,176,177,],[17,-19,17,42,-18,-77,-58,-78,-75,17,-79,-76,-72,-73,-74,-56,-23,17,-41,-22,42,-24,-25,17,-54,-48,-53,-50,-49,-52,-51,-60,17,-57,-37,-40,-80,17,-39,-38,-43,17,-20,-21,17,-59,-34,-35,-36,-63,17,-31,-33,-32,-42,17,-28,-30,-29,-62,-61,117,-27,-47,17,-26,-87,-98,117,-85,17,17,-99,-81,-104,-100,-88,-82,-101,-105,-64,-83,-102,-103,-86,-89,-84,-46,117,-107,117,-109,-115,-117,17,-70,-95,117,-96,-93,17,-90,-97,-91,-94,-92,-106,-108,117,-114,-116,-111,-113,117,-120,-122,17,-118,-110,-112,117,-119,-121,-123,]),'MUTATION':([0,1,2,4,6,7,8,9,10,11,14,15,16,17,18,19,20,21,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,48,49,52,54,55,58,59,60,61,62,63,64,65,66,67,68,69,70,71,75,77,78,79,80,81,82,84,85,86,87,92,93,94,95,96,97,98,99,100,101,103,107,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,137,139,140,141,142,143,145,146,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,172,173,174,175,176,177,],[7,-9,-8,7,18,-19,18,46,-18,-7,-6,-77,-58,-78,-75,18,-17,-79,-76,-72,-73,-74,-56,-23,18,-41,-22,46,-24,-25,18,-54,-48,-53,-50,-49,-52,-51,-60,-15,18,-16,-13,-57,-37,-40,-80,18,-39,-38,-43,18,-20,-21,18,-59,-14,-11,-12,-34,-35,-36,-63,18,-31,-33,-32,-42,18,-10,-28,-30,-29,-62,-61,119,-27,-47,-45,18,-26,-87,-98,119,-85,18,18,-99,-81,-104,-100,-88,-82,-101,-105,-64,-83,-102,-103,-86,-89,-84,-46,-44,119,-107,119,-109,-115,-117,18,-70,-95,119,-96,-93,18,-90,-97,-91,-94,-92,-106,-108,119,-114,-116,-111,-113,119,-120,-122,18,-118,-110,-112,119,-119,-121,-123,]),'AT':([6,7,10,15,16,17,18,21,22,25,26,27,28,29,30,33,39,41,42,43,44,45,46,48,56,58,59,64,65,70,73,80,88,89,90,91,98,],[19,-19,-18,-77,-58,-78,-75,-79,19,19,-76,-72,-73,-74,19,19,-54,-48,-53,-50,-49,-52,-51,-60,19,-57,19,19,19,-59,-65,19,19,-127,-55,19,-61,]),'NULL':([6,7,8,9,10,15,16,17,18,19,21,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,48,52,58,59,60,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,84,85,86,87,92,94,95,96,97,98,99,100,101,107,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,137,139,140,141,142,143,145,146,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,172,173,174,175,176,177,],[21,-19,21,39,-18,-77,-58,-78,-75,21,-79,-76,-72,-73,-74,-56,-23,21,-41,-22,39,-24,-25,21,-54,-48,-53,-50,-49,-52,-51,-60,21,-57,-37,-40,-80,21,-39,-38,-43,21,-20,-21,21,-59,-34,-35,-36,-63,21,-31,-33,-32,-42,21,-28,-30,-29,-62,-61,120,-27,-47,21,-26,-87,-98,120,-85,21,21,-99,-81,-104,-100,-88,-82,-101,-105,-64,-83,-102,-103,-86,-89,-84,-46,120,-107,120,-109,-115,-117,21,-70,-95,120,-96,-93,21,-90,-97,-91,-94,-92,-106,-108,120,-114,-116,-111,-113,120,-120,-122,21,-118,-110,-112,120,-119,-121,-123,]),'COLON':([15,17,18,21,26,27,28,29,33,74,83,144,169,],[-77,-78,-75,-79,-76,-72,-73,-74,61,92,99,161,174,]),'PAREN_R':([15,17,18,21,26,27,28,29,51,53,72,81,82,89,97,105,106,108,109,111,112,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,136,138,139,142,146,147,148,150,151,152,154,155,156,157,158,159,162,164,167,172,175,],[-77,-78,-75,-79,-76,-72,-73,-74,73,-67,-66,-63,98,-127,-62,-126,-125,-69,-124,-87,-98,-85,-99,-81,-104,-100,-88,-82,-101,-105,-64,-83,-102,-103,-86,-89,-84,-130,-68,-129,-107,-115,-70,-128,-95,-96,-71,-93,-90,-97,-91,-94,-92,-106,-114,-111,-120,-110,-119,]),'PAREN_L':([6,7,10,15,17,18,21,25,26,27,28,29,33,48,59,],[23,-19,-18,-77,-78,-75,-79,23,-76,-72,-73,-74,62,62,62,]),'INT_VALUE':([15,17,18,21,26,27,28,29,99,111,112,113,114,117,118,119,120,121,122,123,124,126,127,128,129,130,131,137,139,140,141,142,146,148,149,150,152,154,155,156,157,158,159,160,161,162,164,165,166,167,172,173,174,175,],[-77,-78,-75,-79,-76,-72,-73,-74,122,-87,-98,122,-85,-99,-81,-104,-100,-88,-82,-101,-105,-83,-102,-103,-86,-89,-84,154,-107,122,-109,-115,-70,-95,154,-96,-93,-90,-97,-91,-94,-92,-106,-108,122,-114,-111,-113,154,-120,-110,-112,154,-119,]),'NAME':([6,7,8,9,10,15,16,17,18,19,21,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,48,52,58,59,60,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,84,85,86,87,92,94,95,96,97,98,99,100,101,107,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,137,139,140,141,142,143,145,146,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,172,173,174,175,176,177,],[27,-19,27,41,-18,-77,-58,-78,-75,27,-79,-76,-72,-73,-74,-56,-23,27,-41,-22,41,-24,-25,27,-54,-48,-53,-50,-49,-52,-51,-60,27,-57,-37,-40,-80,27,-39,-38,-43,27,-20,-21,27,-59,-34,-35,-36,-63,27,-31,-33,-32,-42,27,-28,-30,-29,-62,-61,123,-27,-47,27,-26,-87,-98,123,-85,27,27,-99,-81,-104,-100,-88,-82,-101,-105,-64,-83,-102,-103,-86,-89,-84,-46,123,-107,123,-109,-115,-117,27,-70,-95,123,-96,-93,27,-90,-97,-91,-94,-92,-106,-108,123,-114,-116,-111,-113,123,-120,-122,27,-118,-110,-112,123,-119,-121,-123,]),'$end':([1,2,3,4,5,11,12,13,14,20,47,49,54,55,67,71,75,77,93,103,133,],[-9,-8,-2,-1,0,-7,-5,-3,-6,-17,-4,-15,-16,-13,-20,-14,-11,-12,-10,-45,-44,]),'ON':([6,7,8,10,15,16,17,18,19,21,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,52,58,59,60,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,84,85,86,87,92,94,95,96,97,98,99,100,101,107,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,137,139,140,141,142,143,145,146,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,172,173,174,175,176,177,],[26,-19,26,-18,-77,-58,-78,-75,26,-79,-76,-72,-73,-74,-56,-23,26,-41,-22,66,-24,-25,26,-54,69,-48,-53,-50,-49,-52,-51,-60,26,-57,-37,-40,-80,26,-39,-38,-43,26,-20,-21,26,-59,-34,-35,-36,-63,26,-31,-33,-32,-42,26,-28,-30,-29,-62,-61,124,-27,-47,26,-26,-87,-98,124,-85,26,26,-99,-81,-104,-100,-88,-82,-101,-105,-64,-83,-102,-103,-86,-89,-84,-46,124,-107,124,-109,-115,-117,26,-70,-95,124,-96,-93,26,-90,-97,-91,-94,-92,-106,-108,124,-114,-116,-111,-113,124,-120,-122,26,-118,-110,-112,124,-119,-121,-123,]),'FLOAT_VALUE':([15,17,18,21,26,27,28,29,99,111,112,113,114,117,118,119,120,121,122,123,124,126,127,128,129,130,131,137,139,140,141,142,146,148,149,150,152,154,155,156,157,158,159,160,161,162,164,165,166,167,172,173,174,175,],[-77,-78,-75,-79,-76,-72,-73,-74,126,-87,-98,126,-85,-99,-81,-104,-100,-88,-82,-101,-105,-83,-102,-103,-86,-89,-84,156,-107,126,-109,-115,-70,-95,156,-96,-93,-90,-97,-91,-94,-92,-106,-108,126,-114,-111,-113,156,-120,-110,-112,156,-119,]),'FRAGMENT':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,52,54,55,58,59,60,61,62,63,64,65,66,67,68,69,70,71,75,77,78,79,80,81,82,84,85,86,87,92,93,94,95,96,97,98,99,100,101,103,107,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,137,139,140,141,142,143,145,146,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,172,173,174,175,176,177,],[9,-9,-8,9,9,28,-19,28,44,-18,-7,-5,9,-6,-77,-58,-78,-75,28,-17,-79,-76,-72,-73,-74,-56,-23,28,-41,-22,44,-24,-25,28,-54,-48,-53,-50,-49,-52,-51,-4,-60,-15,28,-16,-13,-57,-37,-40,-80,28,-39,-38,-43,28,-20,-21,28,-59,-14,-11,-12,-34,-35,-36,-63,28,-31,-33,-32,-42,28,-10,-28,-30,-29,-62,-61,127,-27,-47,-45,28,-26,-87,-98,127,-85,28,28,-99,-81,-104,-100,-88,-82,-101,-105,-64,-83,-102,-103,-86,-89,-84,-46,-44,127,-107,127,-109,-115,-117,28,-70,-95,127,-96,-93,28,-90,-97,-91,-94,-92,-106,-108,127,-114,-116,-111,-113,127,-120,-122,28,-118,-110,-112,127,-119,-121,-123,]),'QUERY':([0,1,2,4,6,7,8,9,10,11,14,15,16,17,18,19,20,21,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,48,49,52,54,55,58,59,60,61,62,63,64,65,66,67,68,69,70,71,75,77,78,79,80,81,82,84,85,86,87,92,93,94,95,96,97,98,99,100,101,103,107,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,137,139,140,141,142,143,145,146,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,172,173,174,175,176,177,],[10,-9,-8,10,29,-19,29,43,-18,-7,-6,-77,-58,-78,-75,29,-17,-79,-76,-72,-73,-74,-56,-23,29,-41,-22,43,-24,-25,29,-54,-48,-53,-50,-49,-52,-51,-60,-15,29,-16,-13,-57,-37,-40,-80,29,-39,-38,-43,29,-20,-21,29,-59,-14,-11,-12,-34,-35,-36,-63,29,-31,-33,-32,-42,29,-10,-28,-30,-29,-62,-61,128,-27,-47,-45,29,-26,-87,-98,128,-85,29,29,-99,-81,-104,-100,-88,-82,-101,-105,-64,-83,-102,-103,-86,-89,-84,-46,-44,128,-107,128,-109,-115,-117,29,-70,-95,128,-96,-93,29,-90,-97,-91,-94,-92,-106,-108,128,-114,-116,-111,-113,128,-120,-122,29,-118,-110,-112,128,-119,-121,-123,]),'EQUALS':([15,17,18,21,26,27,28,29,89,105,106,108,109,134,138,147,],[-77,-78,-75,-79,-76,-72,-73,-74,-127,-126,-125,137,-124,-130,-129,-128,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'field':([8,38,],[31,31,]),'null_value':([99,113,137,140,149,161,166,174,],[114,114,152,114,152,114,152,152,]),'default_value':([108,],[136,]),'const_object_field_list':([153,],[170,]),'list_type':([92,107,],[106,106,]),'fragment_name':([9,35,],[40,65,]),'argument_list':([62,],[82,]),'directive':([6,22,25,30,33,56,59,64,65,80,88,91,],[16,16,16,58,16,16,16,16,16,16,16,16,]),'operation_type':([0,4,],[6,6,]),'type':([92,107,],[108,135,]),'selection':([8,38,],[34,68,]),'value_list':([113,],[140,]),'arguments':([33,48,59,],[64,70,80,]),'variable_definition':([23,51,],[53,72,]),'named_type':([66,69,92,107,],[90,90,109,109,]),'definition':([0,4,],[11,14,]),'const_value_list':([149,],[166,]),'non_null_type':([92,107,],[105,105,]),'operation_definition':([0,4,],[2,2,]),'variable_definition_list':([23,],[51,]),'definition_list':([0,],[4,]),'variable_definitions':([6,25,],[22,56,]),'list_value':([99,113,140,161,],[121,121,121,121,]),'directives':([6,22,25,33,56,59,64,65,80,88,91,],[24,50,57,63,76,79,85,87,95,102,104,]),'name':([6,8,19,32,38,52,62,66,69,82,92,107,115,116,145,153,170,],[25,33,48,59,33,74,83,89,89,83,89,89,144,146,144,169,169,]),'variable':([99,113,140,161,],[118,118,118,118,]),'object_value':([99,113,140,161,],[130,130,130,130,]),'object_field_list':([115,],[145,]),'selection_list':([8,],[38,]),'object_field':([115,145,],[143,163,]),'fragment_definition':([0,3,4,13,],[1,12,1,47,]),'enum_value':([99,113,137,140,149,161,166,174,],[111,111,148,111,148,111,148,148,]),'type_condition':([66,69,],[88,91,]),'const_object_field':([153,170,],[168,176,]),'directive_list':([6,22,25,33,56,59,64,65,80,88,91,],[30,30,30,30,30,30,30,30,30,30,30,]),'argument':([62,82,],[81,97,]),'const_list_value':([137,149,166,174,],[150,150,150,150,]),'const_value':([137,149,166,174,],[151,165,173,177,]),'fragment_spread':([8,38,],[36,36,]),'alias':([8,38,],[32,32,]),'selection_set':([0,6,22,24,25,33,50,56,57,59,63,64,76,79,80,85,88,91,95,102,104,],[3,20,49,54,55,60,71,75,77,78,84,86,93,94,96,100,101,103,110,132,133,]),'document':([0,],[5,]),'inline_fragment':([8,38,],[37,37,]),'const_object_value':([137,149,166,174,],[155,155,155,155,]),'value':([99,113,140,161,],[125,141,160,171,]),'fragment_list':([3,],[13,]),'boolean_value':([99,113,137,140,149,161,166,174,],[129,129,157,129,157,129,157,157,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> document","S'",1,None,None,None),
  ('document -> definition_list','document',1,'p_document','parser.py',42),
  ('document -> selection_set','document',1,'p_document_shorthand','parser.py',48),
  ('document -> selection_set fragment_list','document',2,'p_document_shorthand_with_fragments','parser.py',54),
  ('fragment_list -> fragment_list fragment_definition','fragment_list',2,'p_fragment_list','parser.py',60),
  ('fragment_list -> fragment_definition','fragment_list',1,'p_fragment_list_single','parser.py',66),
  ('definition_list -> definition_list definition','definition_list',2,'p_definition_list','parser.py',72),
  ('definition_list -> definition','definition_list',1,'p_definition_list_single','parser.py',78),
  ('definition -> operation_definition','definition',1,'p_definition','parser.py',84),
  ('definition -> fragment_definition','definition',1,'p_definition','parser.py',85),
  ('operation_definition -> operation_type name variable_definitions directives selection_set','operation_definition',5,'p_operation_definition1','parser.py',97),
  ('operation_definition -> operation_type name variable_definitions selection_set','operation_definition',4,'p_operation_definition2','parser.py',108),
  ('operation_definition -> operation_type name directives selection_set','operation_definition',4,'p_operation_definition3','parser.py',118),
  ('operation_definition -> operation_type name selection_set','operation_definition',3,'p_operation_definition4','parser.py',128),
  ('operation_definition -> operation_type variable_definitions directives selection_set','operation_definition',4,'p_operation_definition5','parser.py',134),
  ('operation_definition -> operation_type variable_definitions selection_set','operation_definition',3,'p_operation_definition6','parser.py',144),
  ('operation_definition -> operation_type directives selection_set','operation_definition',3,'p_operation_definition7','parser.py',153),
  ('operation_definition -> operation_type selection_set','operation_definition',2,'p_operation_definition8','parser.py',162),
  ('operation_type -> QUERY','operation_type',1,'p_operation_type','parser.py',168),
  ('operation_type -> MUTATION','operation_type',1,'p_operation_type','parser.py',169),
  ('selection_set -> BRACE_L selection_list BRACE_R','selection_set',3,'p_selection_set','parser.py',175),
  ('selection_list -> selection_list selection','selection_list',2,'p_selection_list','parser.py',181),
  ('selection_list -> selection','selection_list',1,'p_selection_list_single','parser.py',187),
  ('selection -> field','selection',1,'p_selection','parser.py',193),
  ('selection -> fragment_spread','selection',1,'p_selection','parser.py',194),
  ('selection -> inline_fragment','selection',1,'p_selection','parser.py',195),
  ('field -> alias name arguments directives selection_set','field',5,'p_field_all','parser.py',201),
  ('field -> name arguments directives selection_set','field',4,'p_field_optional1_1','parser.py',208),
  ('field -> alias name directives selection_set','field',4,'p_field_optional1_2','parser.py',215),
  ('field -> alias name arguments selection_set','field',4,'p_field_optional1_3','parser.py',221),
  ('field -> alias name arguments directives','field',4,'p_field_optional1_4','parser.py',227),
  ('field -> name directives selection_set','field',3,'p_field_optional2_1','parser.py',233),
  ('field -> name arguments selection_set','field',3,'p_field_optional2_2','parser.py',239),
  ('field -> name arguments directives','field',3,'p_field_optional2_3','parser.py',245),
  ('field -> alias name selection_set','field',3,'p_field_optional2_4','parser.py',251),
  ('field -> alias name directives','field',3,'p_field_optional2_5','parser.py',257),
  ('field -> alias name arguments','field',3,'p_field_optional2_6','parser.py',263),
  ('field -> alias name','field',2,'p_field_optional3_1','parser.py',269),
  ('field -> name arguments','field',2,'p_field_optional3_2','parser.py',275),
  ('field -> name directives','field',2,'p_field_optional3_3','parser.py',281),
  ('field -> name selection_set','field',2,'p_field_optional3_4','parser.py',287),
  ('field -> name','field',1,'p_field_optional4','parser.py',293),
  ('fragment_spread -> SPREAD fragment_name directives','fragment_spread',3,'p_fragment_spread1','parser.py',299),
  ('fragment_spread -> SPREAD fragment_name','fragment_spread',2,'p_fragment_spread2','parser.py',305),
  ('fragment_definition -> FRAGMENT fragment_name ON type_condition directives selection_set','fragment_definition',6,'p_fragment_definition1','parser.py',311),
  ('fragment_definition -> FRAGMENT fragment_name ON type_condition selection_set','fragment_definition',5,'p_fragment_definition2','parser.py',318),
  ('inline_fragment -> SPREAD ON type_condition directives selection_set','inline_fragment',5,'p_inline_fragment1','parser.py',325),
  ('inline_fragment -> SPREAD ON type_condition selection_set','inline_fragment',4,'p_inline_fragment2','parser.py',332),
  ('fragment_name -> NAME','fragment_name',1,'p_fragment_name','parser.py',338),
  ('fragment_name -> FRAGMENT','fragment_name',1,'p_fragment_name','parser.py',339),
  ('fragment_name -> QUERY','fragment_name',1,'p_fragment_name','parser.py',340),
  ('fragment_name -> MUTATION','fragment_name',1,'p_fragment_name','parser.py',341),
  ('fragment_name -> TRUE','fragment_name',1,'p_fragment_name','parser.py',342),
  ('fragment_name -> FALSE','fragment_name',1,'p_fragment_name','parser.py',343),
  ('fragment_name -> NULL','fragment_name',1,'p_fragment_name','parser.py',344),
  ('type_condition -> named_type','type_condition',1,'p_type_condition','parser.py',350),
  ('directives -> directive_list','directives',1,'p_directives','parser.py',356),
  ('directive_list -> directive_list directive','directive_list',2,'p_directive_list','parser.py',362),
  ('directive_list -> directive','directive_list',1,'p_directive_list_single','parser.py',368),
  ('directive -> AT name arguments','directive',3,'p_directive','parser.py',374),
  ('directive -> AT name','directive',2,'p_directive','parser.py',375),
  ('arguments -> PAREN_L argument_list PAREN_R','arguments',3,'p_arguments','parser.py',382),
  ('argument_list -> argument_list argument','argument_list',2,'p_argument_list','parser.py',388),
  ('argument_list -> argument','argument_list',1,'p_argument_list_single','parser.py',394),
  ('argument -> name COLON value','argument',3,'p_argument','parser.py',400),
  ('variable_definitions -> PAREN_L variable_definition_list PAREN_R','variable_definitions',3,'p_variable_definitions','parser.py',406),
  ('variable_definition_list -> variable_definition_list variable_definition','variable_definition_list',2,'p_variable_definition_list','parser.py',412),
  ('variable_definition_list -> variable_definition','variable_definition_list',1,'p_variable_definition_list_single','parser.py',418),
  ('variable_definition -> DOLLAR name COLON type default_value','variable_definition',5,'p_variable_definition1','parser.py',424),
  ('variable_definition -> DOLLAR name COLON type','variable_definition',4,'p_variable_definition2','parser.py',430),
  ('variable -> DOLLAR name','variable',2,'p_variable','parser.py',436),
  ('default_value -> EQUALS const_value','default_value',2,'p_default_value','parser.py',442),
  ('name -> NAME','name',1,'p_name','parser.py',448),
  ('name -> FRAGMENT','name',1,'p_name','parser.py',449),
  ('name -> QUERY','name',1,'p_name','parser.py',450),
  ('name -> MUTATION','name',1,'p_name','parser.py',451),
  ('name -> ON','name',1,'p_name','parser.py',452),
  ('name -> TRUE','name',1,'p_name','parser.py',453),
  ('name -> FALSE','name',1,'p_name','parser.py',454),
  ('name -> NULL','name',1,'p_name','parser.py',455),
  ('alias -> name COLON','alias',2,'p_alias','parser.py',461),
  ('value -> variable','value',1,'p_value','parser.py',467),
  ('value -> INT_VALUE','value',1,'p_value','parser.py',468),
  ('value -> FLOAT_VALUE','value',1,'p_value','parser.py',469),
  ('value -> STRING_VALUE','value',1,'p_value','parser.py',470),
  ('value -> null_value','value',1,'p_value','parser.py',471),
  ('value -> boolean_value','value',1,'p_value','parser.py',472),
  ('value -> enum_value','value',1,'p_value','parser.py',473),
  ('value -> list_value','value',1,'p_value','parser.py',474),
  ('value -> object_value','value',1,'p_value','parser.py',475),
  ('const_value -> INT_VALUE','const_value',1,'p_const_value','parser.py',481),
  ('const_value -> FLOAT_VALUE','const_value',1,'p_const_value','parser.py',482),
  ('const_value -> STRING_VALUE','const_value',1,'p_const_value','parser.py',483),
  ('const_value -> null_value','const_value',1,'p_const_value','parser.py',484),
  ('const_value -> boolean_value','const_value',1,'p_const_value','parser.py',485),
  ('const_value -> enum_value','const_value',1,'p_const_value','parser.py',486),
  ('const_value -> const_list_value','const_value',1,'p_const_value','parser.py',487),
  ('const_value -> const_object_value','const_value',1,'p_const_value','parser.py',488),
  ('boolean_value -> TRUE','boolean_value',1,'p_boolean_value','parser.py',494),
  ('boolean_value -> FALSE','boolean_value',1,'p_boolean_value','parser.py',495),
  ('null_value -> NULL','null_value',1,'p_null_value','parser.py',501),
  ('enum_value -> NAME','enum_value',1,'p_enum_value','parser.py',507),
  ('enum_value -> FRAGMENT','enum_value',1,'p_enum_value','parser.py',508),
  ('enum_value -> QUERY','enum_value',1,'p_enum_value','parser.py',509),
  ('enum_value -> MUTATION','enum_value',1,'p_enum_value','parser.py',510),
  ('enum_value -> ON','enum_value',1,'p_enum_value','parser.py',511),
  ('list_value -> BRACKET_L value_list BRACKET_R','list_value',3,'p_list_value','parser.py',517),
  ('list_value -> BRACKET_L BRACKET_R','list_value',2,'p_list_value','parser.py',518),
  ('value_list -> value_list value','value_list',2,'p_value_list','parser.py',524),
  ('value_list -> value','value_list',1,'p_value_list_single','parser.py',530),
  ('const_list_value -> BRACKET_L const_value_list BRACKET_R','const_list_value',3,'p_const_list_value','parser.py',536),
  ('const_list_value -> BRACKET_L BRACKET_R','const_list_value',2,'p_const_list_value','parser.py',537),
  ('const_value_list -> const_value_list const_value','const_value_list',2,'p_const_value_list','parser.py',543),
  ('const_value_list -> const_value','const_value_list',1,'p_const_value_list_single','parser.py',549),
  ('object_value -> BRACE_L object_field_list BRACE_R','object_value',3,'p_object_value','parser.py',555),
  ('object_value -> BRACE_L BRACE_R','object_value',2,'p_object_value','parser.py',556),
  ('object_field_list -> object_field_list object_field','object_field_list',2,'p_object_field_list','parser.py',562),
  ('object_field_list -> object_field','object_field_list',1,'p_object_field_list_single','parser.py',570),
  ('object_field -> name COLON value','object_field',3,'p_object_field','parser.py',576),
  ('const_object_value -> BRACE_L const_object_field_list BRACE_R','const_object_value',3,'p_const_object_value','parser.py',582),
  ('const_object_value -> BRACE_L BRACE_R','const_object_value',2,'p_const_object_value','parser.py',583),
  ('const_object_field_list -> const_object_field_list const_object_field','const_object_field_list',2,'p_const_object_field_list','parser.py',589),
  ('const_object_field_list -> const_object_field','const_object_field_list',1,'p_const_object_field_list_single','parser.py',597),
  ('const_object_field -> name COLON const_value','const_object_field',3,'p_const_object_field','parser.py',603),
  ('type -> named_type','type',1,'p_type','parser.py',609),
  ('type -> list_type','type',1,'p_type','parser.py',610),
  ('type -> non_null_type','type',1,'p_type','parser.py',611),
  ('named_type -> name','named_type',1,'p_named_type','parser.py',617),
  ('list_type -> BRACKET_L type BRACKET_R','list_type',3,'p_list_type','parser.py',623),
  ('non_null_type -> named_type BANG','non_null_type',2,'p_non_null_type','parser.py',629),
  ('non_null_type -> list_type BANG','non_null_type',2,'p_non_null_type','parser.py',630),
]
